---
- name: General Config for routers and switches
  gather_facts: false
  hosts: Routers:Switches
  tasks:
  - name: Add Banner
    ios_banner:
    text: 
      May I remind you, 007, you have a license to kill
      not disobey (network) trafic laws. 
    state: present


- name: Distribution Router Setup
  gather_facts: false
  tasks:
  - name: Enable HSRP on router 1, IP 172.28.128.100
    hosts: Distribution_Routers_Chicago
    ios_config:
      lines:
        - standby 1 ip 172.28.128.100 #group is 1
        - standby priority 100
        - standby 1 preempt
      parents: interface FastEthernet0/0
    when: inventory_hostname=='NAME OF ROUTER 1'
  - name: Enable HSRP on router 2, IP 172.28.128.100 
    hosts: Distribution_Routers_Chicago
    ios_config:
      lines:
        - standby 1 ip 172.28.128.100 #group is 1
        #standby priority is gone here, defining who is the master
        - standby 1 preempt
      parents: interface FastEthernet0/0
    when: inventory_hostname=='NAME OF ROUTER 1' 
##for preempt delay time, cisco recomends (boot time)/2 
## There is a pre-built module for NX-OS switches, lets assume that the data center
## is located in St. Louis and they need higher thruput
  - name: Enable HSRP with the following params on distribution routers in St. Louis
    hosts: Distribution_Routers_St_Louis
    cisco.nxos.nxos_hsrp:
      group: 2
      vip: 
      priority: 100
      interface: FastEthernet0/0
      preempt: enabled
      auth_type: md5
      auth_string: 7 1234
  - name: populate the routing table for Chicago
    hosts: Distribution_Routers_Chicago
    ios_static_route:
      prefix: "192.168.20.64/24"
      next_hop: "192.0.2.3"
      route_name: testing
      pref: 100
  - name: populate routing table for St. Louis
    hosts: Distribution_Routers_St_Louis
    nxos_static_route:
      prefix: "192.168.20.64/24"
      next_hop: "192.0.2.3"
      route_name: testing
      pref: 100
  - name: Next Gen Firewall config 
    hosts: Distribution_Routers_Chicago:Distribution_Routers_St_Louis
    #this will just use the config module 
    https://docs.ansible.com/ansible/2.9/modules/nxos_config_module.html#nxos-config-module
    https://www.networkstraining.com/how-to-configure-cisco-router-with-ios-firewall-functionality-%E2%80%93-cbac/
    https://fchaudhr.github.io/LTRDCN_1572/task1-ansible-node/
    # the config module can also run backups 
    
  - name: backup for distrobution routers 
##after each play is done, back up a snapshot 
 

- name: Edge/ Core Router Setup
  tasks: 
    - name: Configure Site to Site IPSEC Tunel (ISAKMP Phase 1)
    - name: Configure Site to Site IPSEC Tunel (ISAKMP Phase 2)
    https://www.firewall.cx/cisco-technical-knowledgebase/cisco-routers/867-cisco-router-site-to-site-ipsec-vpn.html
        #create ACL, IPSec Transform, Crypto Map, apply crypto mapto the right port
        #the only thing that needs to be different is the peer address, can set this up with logic
    - name: 

- name: VLAN Setup
  tasks:
  - name: VLAN Setup
    hosts: Switches:Distribution_Routers_Chicago:Distribution_Routers_St_Louis
    cisco.ios.ios_vlans:
    config:
    - name: IT
      vlan_id: 10
      state: active
      shutdown: disabled
      remote_span: true
    - name: Business
      vlan_id: 20
      state: active
      shutdown: enabled
    - name: Sales
      vlan_id: 30
      state: active
      shutdown: enabled
    state: merged
## MTU can also be set up in this 
## To Do: learn what shutdown is here
## Learn what remote span is
  - name: Configure Ports for VLANs

#run ping and log results for baseline

- name: Webserver Setup
  tasks: 
  - name: Instal Apps to Servers
    hosts: Webservers
    apt:
      name: nginx
      update_cache: yes
  - name: Setup Directory for HTML Files
    file:
      path: /var/www
      state: directory
  - name: Load Nginx Conf Files
    copy: 
      src: ./AwesomeBusiness.com.conf
      dest: /etc/nginx/sites-available/
  - name: Sim Link Sites Available to Sites enabled
    ansible.builtin.command:
      command: ln /etc/nginx/sites-available/AwesomeBusiness.com.conf /etc/nginx/sites-enabled/AwesomeBusiness.com.conf
  - name: Load Balancer Setup
    hosts: Load_Balancer
    apt:
      name: nginx
      update_cache: yes
  - name: Load Nginx Load Balancer Conf Files
    copy: 
      src: ./LOAD BALANCER CONF
      dest: /etc/nginx/conf.d/LOAD BALANCER CONF

    
