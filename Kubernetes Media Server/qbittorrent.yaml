apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: qbittorrent
  name: qbittorrent
  namespace: mediaserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: qbittorrent
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --volumes hostPath
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/dockermediaserver-default: "true"
        io.kompose.service: qbittorrent
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - securityContext:
            fsGroup: 0
            capabilities:
              add: [ NET_ADMIN ]
          env:
            - name: VPN_ENABLED
              value: "yes"
            - name: VPN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vpn-secret
                  key: username
            - name: VPN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vpn-secret
                  key: password
            - name: K8S_CLUSTER
              value: "yes"
            - name: K8S_POD_CIDR
              value: 10.0.0.0/8
            - name: K8S_SVC_CIDR
              value: 10.152.183.0/24
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: LAN_CIDR
              value: 192.168.1.0/24
            - name: NAME_SERVERS
              value: 1.1.1.1,1.0.0.1
            - name: WEBUI_PORT_ENV
              value: "8080"
          image: tanchwa/qbittorrent-openvpn:v0.3.1
          imagePullPolicy: Always
                  # securityContext:
            # privileged: true
              #            capabilities:
              # add:
              #  - "NET_ADMIN"
          name: qbittorrent
          ports:
            - containerPort: 8080
            - containerPort: 6881
            - containerPort: 6881
              protocol: UDP
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: qb-conf
            - mountPath: /config/openvpn/se493.nordvpn.com.tcp443.ovpn
              name: openvpn-tcp
              subPath: se493.nordvpn.com.tcp443.ovpn
              readOnly: false
            - mountPath: /config/openvpn/se493.nordvpn.com.udp1194.ovpn
              name: openvpn-udp
              subPath: se493.nordvpn.com.udp1194.ovpn
              readOnly: false
            - mountPath: /downloads
              name: qb-nfs0
            - mountPath: /etc/timezone
              name: qbittorrentvpn-hostpath
              readOnly: true
      restartPolicy: Always
      volumes:
        - persistentVolumeClaim:
            claimName: qb-longhorn
          name: qb-conf
        - name: openvpn-tcp
          configMap:
            name: openvpn-tcp
        - name: openvpn-udp
          configMap:
            name: openvpn-udp
        - nfs:
            server: 192.168.1.19
            readOnly: false
            path: /mnt/Main/kubernetes/Torrents
          name: qb-nfs0
        - hostPath:
            path: /etc/timezone
          name: qbittorrentvpn-hostpath
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qb-longhorn
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: qbittorrent
  name: qbittorrent
  namespace: mediaserver
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    - name: "6881"
      port: 6881
      targetPort: 8999
    - name: 6881-udp
      port: 6881
      protocol: UDP
      targetPort: 6881
  selector:
    io.kompose.service: qbittorrent
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "cloudflare-issuer"
  name: qbittorrent-ingress-private
  namespace: mediaserver
spec:
  ingressClassName: private-nginx
  tls:
  - hosts:
      - qbittorrent.andrewsutliff.com
    secretName: qbittorrent-http-tls
  rules:
  - host: "qbittorrent.andrewsutliff.com"
    http:
      paths:
      - backend:
          service:
            name: qbittorrent
            port:
              number: 8080
        path: /
        pathType: Prefix
