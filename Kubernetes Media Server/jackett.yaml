apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: jackett
  name: jackett
  namespace: mediaserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: jackett
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --volumes hostPath
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/dockermediaserver-default: "true"
        io.kompose.service: jackett
    spec:
      containers:
        - env:
            - name: TZ
              value: America/New_York
          image: linuxserver/jackett
          name: jackett
          ports:
            - containerPort: 9117
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: jackett-conf
            - mountPath: /downloads
              name: jackett-nfs0
      restartPolicy: Always
      volumes:
        - persistentVolumeClaim:
            claimName: jackett-longhorn
          name: jackett-conf
        - nfs:
            server: 192.168.1.19
            readOnly: false
            path: /mnt/Main/kubernetes/Torrents
          name: jackett-nfs0
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jackett-longhorn
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --volumes hostPath
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: jackett
  name: jackett
  namespace: mediaserver
spec:
  ports:
    - name: "9117"
      port: 9117
      targetPort: 9117
  selector:
    io.kompose.service: jackett
status:
  loadBalancer: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "cloudflare-issuer"
  name: jackett-ingress-private
  namespace: mediaserver
spec:
  ingressClassName: private-nginx
  tls:
  - hosts:
      - jackett.andrewsutliff.com
    secretName: jackett-http-tls
  rules:
  - host: "jackett.andrewsutliff.com"
    http:
      paths:
      - backend:
          service:
            name: jackett
            port:
              number: 9117
        path: /
        pathType: Prefix

